#include "ESP8266WiFi.h"
#include "WiFiUdp.h"
#include "Arduino.h"

const char* ssid = "SSID_OF_YOUR_WiFi";
const char* password = "Password_of_your_WiFi";


// UDP setup
WiFiUDP udp;
const char* udpAddress = "192.168.1.101"; // Destination IP address
const unsigned int udp_GyroPort = 12345;       // Destination UDP port


const int bufferSize = 2;
String ack ;
float temp ; 



int i = 0 ;
void setup() {

  // Set WiFi to station mode and disconnect from an AP if it was previously connected
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) { // Wait for the Wi-Fi to connect
    delay(1000);
    
  }
  Serial.begin(9600);

  Serial.setTimeout(50);
  }


void connect() {
  Serial.end();  // Set WiFi to station mode and disconnect from an AP if it was previously connected
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) { // Wait for the Wi-Fi to connect
    delay(1000);
  }
  Serial.begin(9600);
}



void sendUdp_GyroPacket(int16_t message) {
  udp.beginPacket(udpAddress, udp_GyroPort);
  udp.write((uint8_t*)&message, sizeof(message)); // Send int16_t as bytes
  udp.endPacket();
}


void check_status() {

  if(WiFi.status() != WL_CONNECTED) {
    Serial.write("E") ;

    connect();
  }

}



void gyro() {
  
  check_status();
  Serial.write("S");
  uint8_t buffer[bufferSize];
 
    if (Serial.available() >= 2) {
        Serial.readBytes(buffer, bufferSize);
        int16_t gyro_Message = (int16_t)((buffer[1] << 8) | buffer[0]);
            
        temp = (float)gyro_Message * 8.75*0.001 ;
        gyro_Message = (int16_t) temp;
       
        memset(buffer,0,sizeof(buffer));
       
      

        if (gyro_Message != 0 || gyro_Message !=NULL) {
            sendUdp_GyroPacket(gyro_Message);
            
            

        }
    }
}


void loop() {

  gyro();
  delay(300);
}
